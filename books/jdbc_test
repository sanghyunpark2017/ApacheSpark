
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


vi /etc/yum.repos.d/MariaDB.repo
-------------------------------------------------------------------------------
[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/10.1/centos7-amd64
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1
-------------------------------------------------------------------------------

yum install -y MariaDB-server

rpm -qa | grep MariaDB

systemctl start mariadb

netstat -anp | grep 3306

chkconfig --list mysql

/usr/bin/mysqladmin -u root password 'P@ssw0rd'

mysql -u root -p

#mysqladmin -u root -p shutdown




======================================================================================

show databases;

create user 'recomm_user'@'localhost' identified by '1234';
select host, user from mysql.user;

create database recomm;

grant all privileges on recomm.* to 'recomm_user'@'localhost';

#외부접속허용
grant all privileges on recomm.* to recomm_user@'%' identified by '1234' with grant option;

grant all privileges on recomm.* to 'recomm_user'@'10.10.64.88';

flush privileges;


use recomm;


Create table test (
a varchar(20) not null,
b varchar(20) not null,
c varchar(20)
) default character set utf8 collate utf8_general_ci ;


insert into test values ("1", "a", "aa");
insert into test values ("2", "b", "bb");
insert into test values ("3", "c", "cc");


show databases;
show tables;

select * from test;

#drop table test;

######################################
import to mariadb
######################################

use recomm;

drop table ratings_2mb;
create table ratings_2mb (
userId int,
movieId int,
rating int,
timestamp datetime);

LOAD DATA LOCAL INFILE "/root/ratings_2MB.csv"
INTO TABLE ratings_2mb
FIELDS TERMINATED BY ','
ENCLOSED BY '\"'
LINES TERMINATED BY '\n';

ALTER TABLE ratings_2mb ADD INDEX idx1 (userId);
ALTER TABLE ratings_2mb ADD INDEX idx2 (movieId);
SHOW INDEX FROM ratings_2mb;

select count(*) from ratings_2mb;
SHOW INDEX FROM ratings_2mb;

----------------------------------------------------------------------------------------

drop table ratings_700mb;
create table ratings_700mb (
userId int,
movieId int,
rating int,
timestamp datetime);

LOAD DATA LOCAL INFILE "/root/ratings_700MB.csv"
INTO TABLE ratings_700mb
FIELDS TERMINATED BY ','
ENCLOSED BY '\"'
LINES TERMINATED BY '\n';

ALTER TABLE ratings_700mb ADD INDEX idx1 (userId);
ALTER TABLE ratings_700mb ADD INDEX idx2 (movieId);
SHOW INDEX FROM ratings_700mb;

select count(*) from ratings_700mb;

----------------------------------------------------------------------------------------









#####################################
JDBC드라이버다운로드
#####################################

# https://downloads.mariadb.org/connector-java/

su - user
wget https://downloads.mariadb.com/Connectors/java/connector-java-2.2.3/mariadb-java-client-2.2.3.jar


######################################
scala쉘에서 mariadb접속
######################################

/home/user/spark-2.3.0-bin-hadoop2.7/bin/spark-shell   --driver-class-path /home/user/mariadb-java-client-2.2.3.jar --jars /home/user/mariadb-java-client-2.2.3.jar

import org.apache.spark.sql.SQLContext

val sqlcontext = new org.apache.spark.sql.SQLContext(sc)

val dataframe_mysql = sqlcontext.read.format("jdbc").option("url", "jdbc:mysql://10.10.64.88:3306/recomm").option("driver", "org.mariadb.jdbc.Driver").option("dbtable", "test").option("user", "recomm_user").option("password", "1234").load()


dataframe_mysql.show()

######################################
pyspark쉘에서 mariadb접속
######################################

/home/user/spark-2.3.0-bin-hadoop2.7/bin/pyspark   --driver-class-path /home/user/mariadb-java-client-2.2.3.jar --jars /home/user/mariadb-java-client-2.2.3.jar


/home/user/spark-2.3.0-bin-hadoop2.7/bin/pyspark  --driver-class-path /home/user/mariadb-java-client-2.2.3.jar --jars /home/user/mariadb-java-client-2.2.3.jar

sc = spark.sparkContext

from pyspark.sql import SQLContext

sqlcontext = SQLContext(sc)

dataframe_mysql = sqlcontext.read.format("jdbc").option("url", "jdbc:mysql://10.10.64.88:3306/recomm").option("driver", "org.mariadb.jdbc.Driver").option("dbtable", "test").option("user", "root").option("password", "P@ssw0rd").load()


type(dataframe_mysql)
dataframe_mysql.show()
print(dataframe_mysql)
dataframe_mysql.filter(dataframe_mysql["a"]>2).show()




